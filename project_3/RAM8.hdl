/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load , sel=address , a=out1dmux , b=out2dmux , c=out3dmux , d=out4dmux , e=out5dmux , f=out6dmux , g=out7dmux , h=out8dmux );
    Register(in=in , load=out1dmux , out=out1 );
    Register(in=in , load=out2dmux , out=out2 );
    Register(in=in , load=out3dmux , out=out3 );
    Register(in=in , load=out4dmux , out=out4 );
    Register(in=in , load=out5dmux , out=out5 );
    Register(in=in , load=out6dmux , out=out6 );
    Register(in=in , load=out7dmux , out=out7 );
    Register(in=in , load=out8dmux , out=out8 );
    Mux8Way16(a=out1 , b=out2 , c=out3 , d=out4 , e=out5 , f=out6 , g=out7 , h=out8 , sel=address , out=out );

    
}